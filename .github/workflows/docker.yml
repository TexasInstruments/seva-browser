name: Docker Workflow
on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64,arm'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Save Docker image as tarball
        run: mkdir seva && docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main && docker save -o seva/seva-browser.tar ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main


      - name: Upload Tar File
        uses: actions/upload-artifact@v2
        with:
          name: seva-browser.tar
          path: seva/seva-browser.tar
          retention-days: 90

      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SEVA }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}

      - name: Upload Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SEVA }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: seva/seva-browser.tar
            asset_name: seva-browser-v${{ github.run_number }}.tar
            asset_content_type: application/tar
